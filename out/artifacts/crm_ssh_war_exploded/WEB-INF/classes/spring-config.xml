<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd ">

    <!--开启注解扫描-->
    <context:component-scan base-package="com.newlyfly.crm_ssh"/>
    <!-- 读取db.properties文件 -->
    <context:property-placeholder location="classpath:db.properties"/>

    <!-- 配置c3p0连接池 -->
    <bean name="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
        <property name="driverClass" value="${jdbc.driverClass}"/>
        <property name="user" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!-- 将SessionFactory配置到spring容器中 -->
    <!-- 加载配置方案1:仍然使用外部的hibernate.cfg.xml配置信息 -->
    <!-- <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean" >
        <property name="configLocation" value="classpath:hibernate.cfg.xml" ></property>
    </bean> -->
    <!-- 加载配置方案2:在spring配置中放置hibernate配置信息 -->
    <bean name="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- 将连接池注入到sessionFactory, hibernate会通过连接池获得连接 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置hibernate基本信息 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="show_sql">true</prop>
                <prop key="format_sql">true</prop>
                <!--<prop key="hibernate.hbm2ddl.auto" >update</prop>-->
            </props>
        </property>
        <!-- 注入hibernate的映射文件 -->
        <property name="mappingLocations" value="classpath:com/newlyfly/crm_ssh/domain/*.hbm.xml"/>
    </bean>

    <!-- 核心事务管理器 -->
    <bean name="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--&lt;!&ndash; 配置通知 &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
        <!--<tx:attributes>-->
            <!--<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false"/>-->
            <!--<tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />-->
            <!--<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />-->
            <!--<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />-->
            <!--<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />-->
            <!--<tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />-->
            <!--<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />-->
            <!--<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />-->
            <!--<tx:method name="list*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />-->
        <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--&lt;!&ndash; 配置将通知植入目标对象，配置切点，配置切面 &ndash;&gt;-->
    <!--<aop:config>-->
        <!--<aop:pointcut id="pt" expression="execution(* com.newlyfly.crm_ssh.service.impl.*ServiceImpl.*(..))"/>-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="pt"/>-->
    <!--</aop:config>-->

    <!-- 支持spring注解 -->
    <tx:annotation-driven/>

    <!--<bean name="demoDao" class="test.com.newlyfly.crm_ssh.dao.impl.DemoDaoImpl"></bean>-->
    <!--<bean name="demoService" class="test.com.newlyfly.crm_ssh.service.impl.DemoServiceImpl"></bean>-->
</beans>